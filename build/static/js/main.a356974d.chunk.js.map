{"version":3,"sources":["actions/types.js","reducers/auth.js","rootReducer.js","reducers/flashMessages.js","utils/setAuthorizationToken.js","actions/authActions.js","components/NavigationBar.js","components/flash/FlashMessage.js","actions/flashMessages.js","components/flash/FlashMessagesList.js","components/App.js","components/Greetings.js","data/timezones.js","components/common/TextFieldGroup.js","components/signup/SignupForm.js","components/signup/SignupPage.js","actions/signupActions.js","components/login/LoginForm.js","components/login/LoginPage.js","components/events/EventForm.js","actions/eventActions.js","components/events/NewEventPage.js","routes.js","utils/requireAuth.js","index.js"],"names":["ADD_FLASH_MESSAGE","DELETE_FLASH_MESSAGE","SET_CURRENT_USER","initialState","isAuthenticated","user","combineReducers","flashMessages","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","id","shortid","generate","message","text","index","findIndex","slice","auth","isEmpty","setAuthorizationToken","token","axios","defaults","headers","common","setCurrentUser","NavigationBar","e","preventDefault","this","props","logout","userLinks","react_default","a","createElement","className","href","onClick","bind","guestLinks","es","to","React","Component","connect","dispatch","localStorage","removeItem","FlashMessage","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","assertThisInitialized","deleteFlashMessage","_this$props$message","classnames","alert-success","alert-danger","addFlashMessage","FlashMessagesList","messages","map","flash_FlashMessage","key","App","components_NavigationBar","flash_FlashMessagesList","children","Greetings","timezones","(GMT-11:00) Niue","(GMT-11:00) Pago Pago","(GMT-10:00) Hawaii Time","(GMT-10:00) Rarotonga","(GMT-10:00) Tahiti","(GMT-09:30) Marquesas","(GMT-09:00) Alaska Time","(GMT-09:00) Gambier","(GMT-08:00) Pacific Time","(GMT-08:00) Pacific Time - Tijuana","(GMT-08:00) Pacific Time - Vancouver","(GMT-08:00) Pacific Time - Whitehorse","(GMT-08:00) Pitcairn","(GMT-07:00) Mountain Time - Dawson Creek","(GMT-07:00) Mountain Time","(GMT-07:00) Mountain Time - Edmonton","(GMT-07:00) Mountain Time - Hermosillo","(GMT-07:00) Mountain Time - Chihuahua, Mazatlan","(GMT-07:00) Mountain Time - Arizona","(GMT-07:00) Mountain Time - Yellowknife","(GMT-06:00) Belize","(GMT-06:00) Central Time","(GMT-06:00) Costa Rica","(GMT-06:00) El Salvador","(GMT-06:00) Guatemala","(GMT-06:00) Managua","(GMT-06:00) Central Time - Mexico City","(GMT-06:00) Central Time - Regina","(GMT-06:00) Central Time - Tegucigalpa","(GMT-06:00) Central Time - Winnipeg","(GMT-06:00) Galapagos","(GMT-05:00) Bogota","(GMT-05:00) America Cancun","(GMT-05:00) Cayman","(GMT-05:00) Guayaquil","(GMT-05:00) Havana","(GMT-05:00) Eastern Time - Iqaluit","(GMT-05:00) Jamaica","(GMT-05:00) Lima","(GMT-05:00) Nassau","(GMT-05:00) Eastern Time","(GMT-05:00) Panama","(GMT-05:00) Port-au-Prince","(GMT-05:00) Rio Branco","(GMT-05:00) Eastern Time - Toronto","(GMT-05:00) Easter Island","(GMT-04:30) Caracas","(GMT-03:00) Asuncion","(GMT-04:00) Barbados","(GMT-04:00) Boa Vista","(GMT-03:00) Campo Grande","(GMT-03:00) Cuiaba","(GMT-04:00) Curacao","(GMT-04:00) Grand Turk","(GMT-04:00) Guyana","(GMT-04:00) Atlantic Time - Halifax","(GMT-04:00) La Paz","(GMT-04:00) Manaus","(GMT-04:00) Martinique","(GMT-04:00) Port of Spain","(GMT-04:00) Porto Velho","(GMT-04:00) Puerto Rico","(GMT-04:00) Santo Domingo","(GMT-04:00) Thule","(GMT-04:00) Bermuda","(GMT-03:30) Newfoundland Time - St. Johns","(GMT-03:00) Araguaina","(GMT-03:00) Buenos Aires","(GMT-03:00) Salvador","(GMT-03:00) Belem","(GMT-03:00) Cayenne","(GMT-03:00) Fortaleza","(GMT-03:00) Godthab","(GMT-03:00) Maceio","(GMT-03:00) Miquelon","(GMT-03:00) Montevideo","(GMT-03:00) Paramaribo","(GMT-03:00) Recife","(GMT-03:00) Santiago","(GMT-02:00) Sao Paulo","(GMT-03:00) Palmer","(GMT-03:00) Rothera","(GMT-03:00) Stanley","(GMT-02:00) Noronha","(GMT-02:00) South Georgia","(GMT-01:00) Scoresbysund","(GMT-01:00) Azores","(GMT-01:00) Cape Verde","(GMT+00:00) Abidjan","(GMT+00:00) Accra","(GMT+00:00) Bissau","(GMT+00:00) Casablanca","(GMT+00:00) El Aaiun","(GMT+00:00) Monrovia","(GMT+00:00) Danmarkshavn","(GMT+00:00) Canary Islands","(GMT+00:00) Faeroe","(GMT+00:00) Reykjavik","(GMT+00:00) GMT (no daylight saving)","(GMT+00:00) Dublin","(GMT+00:00) Lisbon","(GMT+00:00) London","(GMT+01:00) Algiers","(GMT+01:00) Ceuta","(GMT+01:00) Lagos","(GMT+01:00) Ndjamena","(GMT+01:00) Tunis","(GMT+02:00) Windhoek","(GMT+01:00) Amsterdam","(GMT+01:00) Andorra","(GMT+01:00) Central European Time - Belgrade","(GMT+01:00) Berlin","(GMT+01:00) Brussels","(GMT+01:00) Budapest","(GMT+01:00) Copenhagen","(GMT+01:00) Gibraltar","(GMT+01:00) Luxembourg","(GMT+01:00) Madrid","(GMT+01:00) Malta","(GMT+01:00) Monaco","(GMT+01:00) Oslo","(GMT+01:00) Paris","(GMT+01:00) Central European Time - Prague","(GMT+01:00) Rome","(GMT+01:00) Stockholm","(GMT+01:00) Tirane","(GMT+01:00) Vienna","(GMT+01:00) Warsaw","(GMT+01:00) Zurich","(GMT+02:00) Cairo","(GMT+02:00) Johannesburg","(GMT+02:00) Maputo","(GMT+02:00) Tripoli","(GMT+02:00) Amman","(GMT+02:00) Beirut","(GMT+02:00) Damascus","(GMT+02:00) Gaza","(GMT+02:00) Jerusalem","(GMT+02:00) Nicosia","(GMT+02:00) Athens","(GMT+02:00) Bucharest","(GMT+02:00) Chisinau","(GMT+02:00) Helsinki","(GMT+02:00) Istanbul","(GMT+02:00) Moscow-01 - Kaliningrad","(GMT+02:00) Kiev","(GMT+02:00) Riga","(GMT+02:00) Sofia","(GMT+02:00) Tallinn","(GMT+02:00) Vilnius","(GMT+03:00) Khartoum","(GMT+03:00) Nairobi","(GMT+03:00) Syowa","(GMT+03:00) Baghdad","(GMT+03:00) Qatar","(GMT+03:00) Riyadh","(GMT+03:00) Minsk","(GMT+03:00) Moscow+00 - Moscow","(GMT+03:30) Tehran","(GMT+04:00) Baku","(GMT+04:00) Dubai","(GMT+04:00) Tbilisi","(GMT+04:00) Yerevan","(GMT+04:00) Moscow+01 - Samara","(GMT+04:00) Mahe","(GMT+04:00) Mauritius","(GMT+04:00) Reunion","(GMT+04:30) Kabul","(GMT+05:00) Mawson","(GMT+05:00) Aqtau","(GMT+05:00) Aqtobe","(GMT+05:00) Ashgabat","(GMT+05:00) Dushanbe","(GMT+05:00) Karachi","(GMT+05:00) Tashkent","(GMT+05:00) Moscow+02 - Yekaterinburg","(GMT+05:00) Kerguelen","(GMT+05:00) Maldives","(GMT+05:30) India Standard Time","(GMT+05:30) Colombo","(GMT+05:45) Katmandu","(GMT+06:00) Vostok","(GMT+06:00) Almaty","(GMT+06:00) Bishkek","(GMT+06:00) Dhaka","(GMT+06:00) Moscow+03 - Omsk, Novosibirsk","(GMT+06:00) Thimphu","(GMT+06:00) Chagos","(GMT+06:30) Rangoon","(GMT+06:30) Cocos","(GMT+07:00) Davis","(GMT+07:00) Bangkok","(GMT+07:00) Hovd","(GMT+07:00) Jakarta","(GMT+07:00) Moscow+04 - Krasnoyarsk","(GMT+07:00) Hanoi","(GMT+07:00) Christmas","(GMT+08:00) Casey","(GMT+08:00) Brunei","(GMT+08:00) Choibalsan","(GMT+08:00) Hong Kong","(GMT+08:00) Moscow+05 - Irkutsk","(GMT+08:00) Kuala Lumpur","(GMT+08:00) Macau","(GMT+08:00) Makassar","(GMT+08:00) Manila","(GMT+08:00) China Time - Beijing","(GMT+08:00) Singapore","(GMT+08:00) Taipei","(GMT+08:00) Ulaanbaatar","(GMT+08:00) Western Time - Perth","(GMT+08:30) Pyongyang","(GMT+09:00) Dili","(GMT+09:00) Jayapura","(GMT+09:00) Seoul","(GMT+09:00) Tokyo","(GMT+09:00) Moscow+06 - Yakutsk","(GMT+09:00) Palau","(GMT+10:30) Central Time - Adelaide","(GMT+09:30) Central Time - Darwin","(GMT+10:00) Dumont D'Urville","(GMT+10:00) Moscow+07 - Magadan","(GMT+10:00) Moscow+07 - Yuzhno-Sakhalinsk","(GMT+10:00) Eastern Time - Brisbane","(GMT+11:00) Eastern Time - Hobart","(GMT+11:00) Eastern Time - Melbourne, Sydney","(GMT+10:00) Truk","(GMT+10:00) Guam","(GMT+10:00) Port Moresby","(GMT+11:00) Efate","(GMT+11:00) Guadalcanal","(GMT+11:00) Kosrae","(GMT+11:00) Norfolk","(GMT+11:00) Noumea","(GMT+11:00) Ponape","(GMT+12:00) Moscow+09 - Petropavlovsk-Kamchatskiy","(GMT+13:00) Auckland","(GMT+13:00) Fiji","(GMT+12:00) Funafuti","(GMT+12:00) Kwajalein","(GMT+12:00) Majuro","(GMT+12:00) Nauru","(GMT+12:00) Tarawa","(GMT+12:00) Wake","(GMT+12:00) Wallis","(GMT+14:00) Apia","(GMT+13:00) Enderbury","(GMT+13:00) Fakaofo","(GMT+13:00) Tongatapu","(GMT+14:00) Kiritimati","TextFieldGroup","_ref","field","value","label","error","onChange","checkUserExists","has-error","onBlur","name","defaultProps","SignupForm","username","email","password","passwordConfirmation","timezone","errors","isLoading","invalid","onSubmit","setState","defineProperty","target","_validateInput","data","Validator","isNull","isEmail","equals","isValid","validateInput","_this2","val","isUserExists","then","res","_this3","userSignupRequest","context","router","push","err","response","options","common_TextFieldGroup","disabled","contextTypes","PropTypes","object","isRequired","SignupPage","_this$props","signup_SignupForm","userData","post","identifier","get","LoginForm","login","_this$state","form","setItem","jwtDecode","LoginPage","login_LoginForm","EventForm","title","createEvent","event","NewEventPage","events_EventForm","routes","Fragment","path","component","ComposedComponent","Authenticate","_React$Component","apply","inherits","createClass","nextProps","requireAuth","store","createStore","rootReducer","compose","applyMiddleware","thunk","window","devToolsExtension","f","jwtToken","render","react_redux_es","history","browserHistory","document","getElementById"],"mappings":"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","file":"static/js/main.a356974d.chunk.js","sourcesContent":["export const ADD_FLASH_MESSAGE = 'ADD_FLASH_MESSAGE';\nexport const DELETE_FLASH_MESSAGE = 'DELETE_FLASH_MESSAGE';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n","import { SET_CURRENT_USER } from '../actions/types';\nimport isEmpty from 'lodash/isEmpty';\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {}\n};\n\nexport default (state = initialState, action = {}) => {\n  switch(action.type) {\n    case SET_CURRENT_USER:\n      return {\n        isAuthenticated: !isEmpty(action.user),\n        user: action.user\n      };\n    default: return state;\n  }\n}\n","import { combineReducers } from 'redux';\n\nimport flashMessages from './reducers/flashMessages';\nimport auth from './reducers/auth';\n\nexport default combineReducers({\n  flashMessages,\n  auth\n});\n","import { ADD_FLASH_MESSAGE, DELETE_FLASH_MESSAGE } from '../actions/types';\nimport shortid from 'shortid';\nimport findIndex from 'lodash/findIndex';\n\nexport default (state = [], action = {}) => {\n  switch(action.type) {\n    case ADD_FLASH_MESSAGE:\n      return [\n        ...state,\n        {\n          id: shortid.generate(),\n          type: action.message.type,\n          text: action.message.text\n        }\n      ];\n    case DELETE_FLASH_MESSAGE:\n      const index = findIndex(state, { id: action.id });\n      if (index >= 0) {\n        return [\n          ...state.slice(0, index),\n          ...state.slice(index + 1)\n        ];\n      }\n      return state;\n\n    default: return state;\n  }\n}\n","import axios from 'axios';\n\nexport default function setAuthorizationToken(token) {\n  if (token) {\n    axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n  } else {\n    delete axios.defaults.headers.common['Authorization'];\n  }\n}\n","import axios from 'axios';\nimport setAuthorizationToken from '../utils/setAuthorizationToken';\nimport jwtDecode from 'jwt-decode';\nimport { SET_CURRENT_USER } from './types';\n\nexport function setCurrentUser(user) {\n  return {\n    type: SET_CURRENT_USER,\n    user\n  };\n}\n\nexport function logout() {\n  return dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthorizationToken(false);\n    dispatch(setCurrentUser({}));\n  }\n}\n\nexport function login(data) {\n  return dispatch => {\n    return axios.post('/api/auth', data).then(res => {\n      const token = res.data.token;\n      localStorage.setItem('jwtToken', token);\n      setAuthorizationToken(token);\n      dispatch(setCurrentUser(jwtDecode(token)));\n    });\n  }\n}\n","import React from 'react';\nimport { Link } from 'react-router';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/authActions';\n\nclass NavigationBar extends React.Component {\n  logout(e) {\n    e.preventDefault();\n    this.props.logout();\n  }\n\n  render() {\n    const { isAuthenticated } = this.props.auth;\n\n    const userLinks = (\n      <ul className=\"nav navbar-nav navbar-right\">\n        <li><a href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/boostrap.min.css\" onClick={this.logout.bind(this)}>Logout</a></li>\n      </ul>\n    );\n\n    const guestLinks = (\n      <ul className=\"nav navbar-nav navbar-right\">\n        <li><Link to=\"/signup\">Sign up</Link></li>\n        <li><Link to=\"/login\">Login</Link></li>\n      </ul>\n    );\n\n    return (\n      <nav className=\"navbar navbar-default\">\n        <div className=\"container-fluid\">\n          <div className=\"navbar-header\">\n            <Link to=\"/\" className=\"navbar-brand\">Red Dice</Link>\n          </div>\n\n          <div className=\"collapse navbar-collapse\">\n            { isAuthenticated ? userLinks : guestLinks }\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nNavigationBar.propTypes = {\n  auth: React.PropTypes.object.isRequired,\n  logout: React.PropTypes.func.isRequired\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nexport default connect(mapStateToProps, { logout })(NavigationBar);\n","import React from 'react';\nimport classnames from 'classnames';\n\nclass FlashMessage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    this.props.deleteFlashMessage(this.props.message.id);\n  }\n\n  render() {\n    const { type, text } = this.props.message;\n    return (\n      <div className={classnames('alert', {\n        'alert-success': type === 'success',\n        'alert-danger': type === 'error'\n      })}>\n        <button onClick={this.onClick} className=\"close\"><span>&times;</span></button>\n        {text}\n      </div>\n    );\n  }\n}\n\nFlashMessage.propTypes = {\n  message: React.PropTypes.object.isRequired,\n  deleteFlashMessage: React.PropTypes.func.isRequired\n}\n\nexport default FlashMessage;\n","import { ADD_FLASH_MESSAGE, DELETE_FLASH_MESSAGE } from './types';\n\nexport function addFlashMessage(message) {\n  return {\n    type: ADD_FLASH_MESSAGE,\n    message\n  }\n}\n\nexport function deleteFlashMessage(id) {\n  return {\n    type: DELETE_FLASH_MESSAGE,\n    id\n  }\n}\n","import React from 'react';\nimport FlashMessage from './FlashMessage';\nimport { connect } from 'react-redux';\nimport { deleteFlashMessage } from '../../actions/flashMessages';\n\nclass FlashMessagesList extends React.Component {\n  render() {\n    const messages = this.props.messages.map(message =>\n      <FlashMessage key={message.id} message={message} deleteFlashMessage={this.props.deleteFlashMessage} />\n    );\n    return (\n      <div>{messages}</div>\n    );\n  }\n}\n\nFlashMessagesList.propTypes = {\n  messages: React.PropTypes.array.isRequired,\n  deleteFlashMessage: React.PropTypes.func.isRequired\n}\n\nfunction mapStateToProps(state) {\n  return {\n    messages: state.flashMessages\n  }\n}\n\nexport default connect(mapStateToProps, { deleteFlashMessage })(FlashMessagesList);\n","import React from 'react';\nimport NavigationBar from './NavigationBar';\nimport FlashMessagesList from './flash/FlashMessagesList';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <NavigationBar />\n        <FlashMessagesList />\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\n\nclass Greetings extends React.Component {\n  render() {\n    return (\n      <div className=\"jumbotron\">\n        <h1>Hi!</h1>\n      </div>\n    );\n  }\n}\n\nexport default Greetings;\n","export default {\n  \"(GMT-11:00) Niue\": \"Pacific/Niue\",\n  \"(GMT-11:00) Pago Pago\": \"Pacific/Pago_Pago\",\n  \"(GMT-10:00) Hawaii Time\": \"Pacific/Honolulu\",\n  \"(GMT-10:00) Rarotonga\": \"Pacific/Rarotonga\",\n  \"(GMT-10:00) Tahiti\": \"Pacific/Tahiti\",\n  \"(GMT-09:30) Marquesas\": \"Pacific/Marquesas\",\n  \"(GMT-09:00) Alaska Time\": \"America/Anchorage\",\n  \"(GMT-09:00) Gambier\": \"Pacific/Gambier\",\n  \"(GMT-08:00) Pacific Time\": \"America/Los_Angeles\",\n  \"(GMT-08:00) Pacific Time - Tijuana\": \"America/Tijuana\",\n  \"(GMT-08:00) Pacific Time - Vancouver\": \"America/Vancouver\",\n  \"(GMT-08:00) Pacific Time - Whitehorse\": \"America/Whitehorse\",\n  \"(GMT-08:00) Pitcairn\": \"Pacific/Pitcairn\",\n  \"(GMT-07:00) Mountain Time - Dawson Creek\": \"America/Dawson_Creek\",\n  \"(GMT-07:00) Mountain Time\": \"America/Denver\",\n  \"(GMT-07:00) Mountain Time - Edmonton\": \"America/Edmonton\",\n  \"(GMT-07:00) Mountain Time - Hermosillo\": \"America/Hermosillo\",\n  \"(GMT-07:00) Mountain Time - Chihuahua, Mazatlan\": \"America/Mazatlan\",\n  \"(GMT-07:00) Mountain Time - Arizona\": \"America/Phoenix\",\n  \"(GMT-07:00) Mountain Time - Yellowknife\": \"America/Yellowknife\",\n  \"(GMT-06:00) Belize\": \"America/Belize\",\n  \"(GMT-06:00) Central Time\": \"America/Chicago\",\n  \"(GMT-06:00) Costa Rica\": \"America/Costa_Rica\",\n  \"(GMT-06:00) El Salvador\": \"America/El_Salvador\",\n  \"(GMT-06:00) Guatemala\": \"America/Guatemala\",\n  \"(GMT-06:00) Managua\": \"America/Managua\",\n  \"(GMT-06:00) Central Time - Mexico City\": \"America/Mexico_City\",\n  \"(GMT-06:00) Central Time - Regina\": \"America/Regina\",\n  \"(GMT-06:00) Central Time - Tegucigalpa\": \"America/Tegucigalpa\",\n  \"(GMT-06:00) Central Time - Winnipeg\": \"America/Winnipeg\",\n  \"(GMT-06:00) Galapagos\": \"Pacific/Galapagos\",\n  \"(GMT-05:00) Bogota\": \"America/Bogota\",\n  \"(GMT-05:00) America Cancun\": \"America/Cancun\",\n  \"(GMT-05:00) Cayman\": \"America/Cayman\",\n  \"(GMT-05:00) Guayaquil\": \"America/Guayaquil\",\n  \"(GMT-05:00) Havana\": \"America/Havana\",\n  \"(GMT-05:00) Eastern Time - Iqaluit\": \"America/Iqaluit\",\n  \"(GMT-05:00) Jamaica\": \"America/Jamaica\",\n  \"(GMT-05:00) Lima\": \"America/Lima\",\n  \"(GMT-05:00) Nassau\": \"America/Nassau\",\n  \"(GMT-05:00) Eastern Time\": \"America/New_York\",\n  \"(GMT-05:00) Panama\": \"America/Panama\",\n  \"(GMT-05:00) Port-au-Prince\": \"America/Port-au-Prince\",\n  \"(GMT-05:00) Rio Branco\": \"America/Rio_Branco\",\n  \"(GMT-05:00) Eastern Time - Toronto\": \"America/Toronto\",\n  \"(GMT-05:00) Easter Island\": \"Pacific/Easter\",\n  \"(GMT-04:30) Caracas\": \"America/Caracas\",\n  \"(GMT-03:00) Asuncion\": \"America/Asuncion\",\n  \"(GMT-04:00) Barbados\": \"America/Barbados\",\n  \"(GMT-04:00) Boa Vista\": \"America/Boa_Vista\",\n  \"(GMT-03:00) Campo Grande\": \"America/Campo_Grande\",\n  \"(GMT-03:00) Cuiaba\": \"America/Cuiaba\",\n  \"(GMT-04:00) Curacao\": \"America/Curacao\",\n  \"(GMT-04:00) Grand Turk\": \"America/Grand_Turk\",\n  \"(GMT-04:00) Guyana\": \"America/Guyana\",\n  \"(GMT-04:00) Atlantic Time - Halifax\": \"America/Halifax\",\n  \"(GMT-04:00) La Paz\": \"America/La_Paz\",\n  \"(GMT-04:00) Manaus\": \"America/Manaus\",\n  \"(GMT-04:00) Martinique\": \"America/Martinique\",\n  \"(GMT-04:00) Port of Spain\": \"America/Port_of_Spain\",\n  \"(GMT-04:00) Porto Velho\": \"America/Porto_Velho\",\n  \"(GMT-04:00) Puerto Rico\": \"America/Puerto_Rico\",\n  \"(GMT-04:00) Santo Domingo\": \"America/Santo_Domingo\",\n  \"(GMT-04:00) Thule\": \"America/Thule\",\n  \"(GMT-04:00) Bermuda\": \"Atlantic/Bermuda\",\n  \"(GMT-03:30) Newfoundland Time - St. Johns\": \"America/St_Johns\",\n  \"(GMT-03:00) Araguaina\": \"America/Araguaina\",\n  \"(GMT-03:00) Buenos Aires\": \"America/Argentina/Buenos_Aires\",\n  \"(GMT-03:00) Salvador\": \"America/Bahia\",\n  \"(GMT-03:00) Belem\": \"America/Belem\",\n  \"(GMT-03:00) Cayenne\": \"America/Cayenne\",\n  \"(GMT-03:00) Fortaleza\": \"America/Fortaleza\",\n  \"(GMT-03:00) Godthab\": \"America/Godthab\",\n  \"(GMT-03:00) Maceio\": \"America/Maceio\",\n  \"(GMT-03:00) Miquelon\": \"America/Miquelon\",\n  \"(GMT-03:00) Montevideo\": \"America/Montevideo\",\n  \"(GMT-03:00) Paramaribo\": \"America/Paramaribo\",\n  \"(GMT-03:00) Recife\": \"America/Recife\",\n  \"(GMT-03:00) Santiago\": \"America/Santiago\",\n  \"(GMT-02:00) Sao Paulo\": \"America/Sao_Paulo\",\n  \"(GMT-03:00) Palmer\": \"Antarctica/Palmer\",\n  \"(GMT-03:00) Rothera\": \"Antarctica/Rothera\",\n  \"(GMT-03:00) Stanley\": \"Atlantic/Stanley\",\n  \"(GMT-02:00) Noronha\": \"America/Noronha\",\n  \"(GMT-02:00) South Georgia\": \"Atlantic/South_Georgia\",\n  \"(GMT-01:00) Scoresbysund\": \"America/Scoresbysund\",\n  \"(GMT-01:00) Azores\": \"Atlantic/Azores\",\n  \"(GMT-01:00) Cape Verde\": \"Atlantic/Cape_Verde\",\n  \"(GMT+00:00) Abidjan\": \"Africa/Abidjan\",\n  \"(GMT+00:00) Accra\": \"Africa/Accra\",\n  \"(GMT+00:00) Bissau\": \"Africa/Bissau\",\n  \"(GMT+00:00) Casablanca\": \"Africa/Casablanca\",\n  \"(GMT+00:00) El Aaiun\": \"Africa/El_Aaiun\",\n  \"(GMT+00:00) Monrovia\": \"Africa/Monrovia\",\n  \"(GMT+00:00) Danmarkshavn\": \"America/Danmarkshavn\",\n  \"(GMT+00:00) Canary Islands\": \"Atlantic/Canary\",\n  \"(GMT+00:00) Faeroe\": \"Atlantic/Faroe\",\n  \"(GMT+00:00) Reykjavik\": \"Atlantic/Reykjavik\",\n  \"(GMT+00:00) GMT (no daylight saving)\": \"Etc/GMT\",\n  \"(GMT+00:00) Dublin\": \"Europe/Dublin\",\n  \"(GMT+00:00) Lisbon\": \"Europe/Lisbon\",\n  \"(GMT+00:00) London\": \"Europe/London\",\n  \"(GMT+01:00) Algiers\": \"Africa/Algiers\",\n  \"(GMT+01:00) Ceuta\": \"Africa/Ceuta\",\n  \"(GMT+01:00) Lagos\": \"Africa/Lagos\",\n  \"(GMT+01:00) Ndjamena\": \"Africa/Ndjamena\",\n  \"(GMT+01:00) Tunis\": \"Africa/Tunis\",\n  \"(GMT+02:00) Windhoek\": \"Africa/Windhoek\",\n  \"(GMT+01:00) Amsterdam\": \"Europe/Amsterdam\",\n  \"(GMT+01:00) Andorra\": \"Europe/Andorra\",\n  \"(GMT+01:00) Central European Time - Belgrade\": \"Europe/Belgrade\",\n  \"(GMT+01:00) Berlin\": \"Europe/Berlin\",\n  \"(GMT+01:00) Brussels\": \"Europe/Brussels\",\n  \"(GMT+01:00) Budapest\": \"Europe/Budapest\",\n  \"(GMT+01:00) Copenhagen\": \"Europe/Copenhagen\",\n  \"(GMT+01:00) Gibraltar\": \"Europe/Gibraltar\",\n  \"(GMT+01:00) Luxembourg\": \"Europe/Luxembourg\",\n  \"(GMT+01:00) Madrid\": \"Europe/Madrid\",\n  \"(GMT+01:00) Malta\": \"Europe/Malta\",\n  \"(GMT+01:00) Monaco\": \"Europe/Monaco\",\n  \"(GMT+01:00) Oslo\": \"Europe/Oslo\",\n  \"(GMT+01:00) Paris\": \"Europe/Paris\",\n  \"(GMT+01:00) Central European Time - Prague\": \"Europe/Prague\",\n  \"(GMT+01:00) Rome\": \"Europe/Rome\",\n  \"(GMT+01:00) Stockholm\": \"Europe/Stockholm\",\n  \"(GMT+01:00) Tirane\": \"Europe/Tirane\",\n  \"(GMT+01:00) Vienna\": \"Europe/Vienna\",\n  \"(GMT+01:00) Warsaw\": \"Europe/Warsaw\",\n  \"(GMT+01:00) Zurich\": \"Europe/Zurich\",\n  \"(GMT+02:00) Cairo\": \"Africa/Cairo\",\n  \"(GMT+02:00) Johannesburg\": \"Africa/Johannesburg\",\n  \"(GMT+02:00) Maputo\": \"Africa/Maputo\",\n  \"(GMT+02:00) Tripoli\": \"Africa/Tripoli\",\n  \"(GMT+02:00) Amman\": \"Asia/Amman\",\n  \"(GMT+02:00) Beirut\": \"Asia/Beirut\",\n  \"(GMT+02:00) Damascus\": \"Asia/Damascus\",\n  \"(GMT+02:00) Gaza\": \"Asia/Gaza\",\n  \"(GMT+02:00) Jerusalem\": \"Asia/Jerusalem\",\n  \"(GMT+02:00) Nicosia\": \"Asia/Nicosia\",\n  \"(GMT+02:00) Athens\": \"Europe/Athens\",\n  \"(GMT+02:00) Bucharest\": \"Europe/Bucharest\",\n  \"(GMT+02:00) Chisinau\": \"Europe/Chisinau\",\n  \"(GMT+02:00) Helsinki\": \"Europe/Helsinki\",\n  \"(GMT+02:00) Istanbul\": \"Europe/Istanbul\",\n  \"(GMT+02:00) Moscow-01 - Kaliningrad\": \"Europe/Kaliningrad\",\n  \"(GMT+02:00) Kiev\": \"Europe/Kiev\",\n  \"(GMT+02:00) Riga\": \"Europe/Riga\",\n  \"(GMT+02:00) Sofia\": \"Europe/Sofia\",\n  \"(GMT+02:00) Tallinn\": \"Europe/Tallinn\",\n  \"(GMT+02:00) Vilnius\": \"Europe/Vilnius\",\n  \"(GMT+03:00) Khartoum\": \"Africa/Khartoum\",\n  \"(GMT+03:00) Nairobi\": \"Africa/Nairobi\",\n  \"(GMT+03:00) Syowa\": \"Antarctica/Syowa\",\n  \"(GMT+03:00) Baghdad\": \"Asia/Baghdad\",\n  \"(GMT+03:00) Qatar\": \"Asia/Qatar\",\n  \"(GMT+03:00) Riyadh\": \"Asia/Riyadh\",\n  \"(GMT+03:00) Minsk\": \"Europe/Minsk\",\n  \"(GMT+03:00) Moscow+00 - Moscow\": \"Europe/Moscow\",\n  \"(GMT+03:30) Tehran\": \"Asia/Tehran\",\n  \"(GMT+04:00) Baku\": \"Asia/Baku\",\n  \"(GMT+04:00) Dubai\": \"Asia/Dubai\",\n  \"(GMT+04:00) Tbilisi\": \"Asia/Tbilisi\",\n  \"(GMT+04:00) Yerevan\": \"Asia/Yerevan\",\n  \"(GMT+04:00) Moscow+01 - Samara\": \"Europe/Samara\",\n  \"(GMT+04:00) Mahe\": \"Indian/Mahe\",\n  \"(GMT+04:00) Mauritius\": \"Indian/Mauritius\",\n  \"(GMT+04:00) Reunion\": \"Indian/Reunion\",\n  \"(GMT+04:30) Kabul\": \"Asia/Kabul\",\n  \"(GMT+05:00) Mawson\": \"Antarctica/Mawson\",\n  \"(GMT+05:00) Aqtau\": \"Asia/Aqtau\",\n  \"(GMT+05:00) Aqtobe\": \"Asia/Aqtobe\",\n  \"(GMT+05:00) Ashgabat\": \"Asia/Ashgabat\",\n  \"(GMT+05:00) Dushanbe\": \"Asia/Dushanbe\",\n  \"(GMT+05:00) Karachi\": \"Asia/Karachi\",\n  \"(GMT+05:00) Tashkent\": \"Asia/Tashkent\",\n  \"(GMT+05:00) Moscow+02 - Yekaterinburg\": \"Asia/Yekaterinburg\",\n  \"(GMT+05:00) Kerguelen\": \"Indian/Kerguelen\",\n  \"(GMT+05:00) Maldives\": \"Indian/Maldives\",\n  \"(GMT+05:30) India Standard Time\": \"Asia/Calcutta\",\n  \"(GMT+05:30) Colombo\": \"Asia/Colombo\",\n  \"(GMT+05:45) Katmandu\": \"Asia/Katmandu\",\n  \"(GMT+06:00) Vostok\": \"Antarctica/Vostok\",\n  \"(GMT+06:00) Almaty\": \"Asia/Almaty\",\n  \"(GMT+06:00) Bishkek\": \"Asia/Bishkek\",\n  \"(GMT+06:00) Dhaka\": \"Asia/Dhaka\",\n  \"(GMT+06:00) Moscow+03 - Omsk, Novosibirsk\": \"Asia/Omsk\",\n  \"(GMT+06:00) Thimphu\": \"Asia/Thimphu\",\n  \"(GMT+06:00) Chagos\": \"Indian/Chagos\",\n  \"(GMT+06:30) Rangoon\": \"Asia/Rangoon\",\n  \"(GMT+06:30) Cocos\": \"Indian/Cocos\",\n  \"(GMT+07:00) Davis\": \"Antarctica/Davis\",\n  \"(GMT+07:00) Bangkok\": \"Asia/Bangkok\",\n  \"(GMT+07:00) Hovd\": \"Asia/Hovd\",\n  \"(GMT+07:00) Jakarta\": \"Asia/Jakarta\",\n  \"(GMT+07:00) Moscow+04 - Krasnoyarsk\": \"Asia/Krasnoyarsk\",\n  \"(GMT+07:00) Hanoi\": \"Asia/Saigon\",\n  \"(GMT+07:00) Christmas\": \"Indian/Christmas\",\n  \"(GMT+08:00) Casey\": \"Antarctica/Casey\",\n  \"(GMT+08:00) Brunei\": \"Asia/Brunei\",\n  \"(GMT+08:00) Choibalsan\": \"Asia/Choibalsan\",\n  \"(GMT+08:00) Hong Kong\": \"Asia/Hong_Kong\",\n  \"(GMT+08:00) Moscow+05 - Irkutsk\": \"Asia/Irkutsk\",\n  \"(GMT+08:00) Kuala Lumpur\": \"Asia/Kuala_Lumpur\",\n  \"(GMT+08:00) Macau\": \"Asia/Macau\",\n  \"(GMT+08:00) Makassar\": \"Asia/Makassar\",\n  \"(GMT+08:00) Manila\": \"Asia/Manila\",\n  \"(GMT+08:00) China Time - Beijing\": \"Asia/Shanghai\",\n  \"(GMT+08:00) Singapore\": \"Asia/Singapore\",\n  \"(GMT+08:00) Taipei\": \"Asia/Taipei\",\n  \"(GMT+08:00) Ulaanbaatar\": \"Asia/Ulaanbaatar\",\n  \"(GMT+08:00) Western Time - Perth\": \"Australia/Perth\",\n  \"(GMT+08:30) Pyongyang\": \"Asia/Pyongyang\",\n  \"(GMT+09:00) Dili\": \"Asia/Dili\",\n  \"(GMT+09:00) Jayapura\": \"Asia/Jayapura\",\n  \"(GMT+09:00) Seoul\": \"Asia/Seoul\",\n  \"(GMT+09:00) Tokyo\": \"Asia/Tokyo\",\n  \"(GMT+09:00) Moscow+06 - Yakutsk\": \"Asia/Yakutsk\",\n  \"(GMT+09:00) Palau\": \"Pacific/Palau\",\n  \"(GMT+10:30) Central Time - Adelaide\": \"Australia/Adelaide\",\n  \"(GMT+09:30) Central Time - Darwin\": \"Australia/Darwin\",\n  \"(GMT+10:00) Dumont D'Urville\": \"Antarctica/DumontDUrville\",\n  \"(GMT+10:00) Moscow+07 - Magadan\": \"Asia/Magadan\",\n  \"(GMT+10:00) Moscow+07 - Yuzhno-Sakhalinsk\": \"Asia/Vladivostok\",\n  \"(GMT+10:00) Eastern Time - Brisbane\": \"Australia/Brisbane\",\n  \"(GMT+11:00) Eastern Time - Hobart\": \"Australia/Hobart\",\n  \"(GMT+11:00) Eastern Time - Melbourne, Sydney\": \"Australia/Sydney\",\n  \"(GMT+10:00) Truk\": \"Pacific/Chuuk\",\n  \"(GMT+10:00) Guam\": \"Pacific/Guam\",\n  \"(GMT+10:00) Port Moresby\": \"Pacific/Port_Moresby\",\n  \"(GMT+11:00) Efate\": \"Pacific/Efate\",\n  \"(GMT+11:00) Guadalcanal\": \"Pacific/Guadalcanal\",\n  \"(GMT+11:00) Kosrae\": \"Pacific/Kosrae\",\n  \"(GMT+11:00) Norfolk\": \"Pacific/Norfolk\",\n  \"(GMT+11:00) Noumea\": \"Pacific/Noumea\",\n  \"(GMT+11:00) Ponape\": \"Pacific/Pohnpei\",\n  \"(GMT+12:00) Moscow+09 - Petropavlovsk-Kamchatskiy\": \"Asia/Kamchatka\",\n  \"(GMT+13:00) Auckland\": \"Pacific/Auckland\",\n  \"(GMT+13:00) Fiji\": \"Pacific/Fiji\",\n  \"(GMT+12:00) Funafuti\": \"Pacific/Funafuti\",\n  \"(GMT+12:00) Kwajalein\": \"Pacific/Kwajalein\",\n  \"(GMT+12:00) Majuro\": \"Pacific/Majuro\",\n  \"(GMT+12:00) Nauru\": \"Pacific/Nauru\",\n  \"(GMT+12:00) Tarawa\": \"Pacific/Tarawa\",\n  \"(GMT+12:00) Wake\": \"Pacific/Wake\",\n  \"(GMT+12:00) Wallis\": \"Pacific/Wallis\",\n  \"(GMT+14:00) Apia\": \"Pacific/Apia\",\n  \"(GMT+13:00) Enderbury\": \"Pacific/Enderbury\",\n  \"(GMT+13:00) Fakaofo\": \"Pacific/Fakaofo\",\n  \"(GMT+13:00) Tongatapu\": \"Pacific/Tongatapu\",\n  \"(GMT+14:00) Kiritimati\": \"Pacific/Kiritimati\"\n}\n","import React from 'react';\nimport classnames from 'classnames';\n\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <input\n        onChange={onChange}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        className=\"form-control\"\n      />\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\n\nTextFieldGroup.propTypes = {\n  field: React.PropTypes.string.isRequired,\n  value: React.PropTypes.string.isRequired,\n  label: React.PropTypes.string.isRequired,\n  error: React.PropTypes.string,\n  type: React.PropTypes.string.isRequired,\n  onChange: React.PropTypes.func.isRequired,\n  checkUserExists: React.PropTypes.func\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup;\n","import React from 'react';\nimport timezones from '../../data/timezones';\nimport map from 'lodash/map';\nimport classnames from 'classnames';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport Validator from 'validator';\nimport isEmpty from 'lodash/isEmpty';\n\nfunction validateInput(data) {\n  let errors = {};\n\n  if (Validator.isNull(data.username)) {\n    errors.username = 'This field is required';\n  }\n  if (Validator.isNull(data.email)) {\n    errors.email = 'This field is required';\n  }\n  if (!Validator.isEmail(data.email)) {\n    errors.email = 'Email is invalid';\n  }\n  if (Validator.isNull(data.password)) {\n    errors.password = 'This field is required';\n  }\n  if (Validator.isNull(data.passwordConfirmation)) {\n    errors.passwordConfirmation = 'This field is required';\n  }\n  if (!Validator.equals(data.password, data.passwordConfirmation)) {\n    errors.passwordConfirmation = 'Passwords must match';\n  }\n  if (Validator.isNull(data.timezone)) {\n    errors.timezone = 'This field is required';\n  }\n\nreturn {\n  errors,\n  isValid: isEmpty(errors)\n }\n}\n\nclass SignupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      timezone: '',\n      errors: {},\n      isLoading: false,\n      invalid: false\n    }\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.checkUserExists = this.checkUserExists.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  isValid() {\n    const { errors, isValid } = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n\n    return isValid;\n  }\n\n  checkUserExists(e) {\n    const field = e.target.name;\n    const val = e.target.value;\n    if (val !== '') {\n      this.props.isUserExists(val).then(res => {\n        let errors = this.state.errors;\n        let invalid;\n        if (res.data.user) {\n          errors[field] = 'There is user with such ' + field;\n          invalid = true;\n        } else {\n          errors[field] = '';\n          invalid = false;\n        }\n        this.setState({ errors, invalid });\n      });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.userSignupRequest(this.state).then(\n        () => {\n          this.props.addFlashMessage({\n            type: 'success',\n            text: 'You signed up successfully. Welcome!'\n          });\n          this.context.router.push('/');\n        },\n        (err) => this.setState({ errors: err.response.data, isLoading: false })\n      );\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n    const options = map(timezones, (val, key) =>\n      <option key={val} value={val}>{key}</option>\n    );\n    return (\n      <form onSubmit={this.onSubmit}>\n        <h1>Join our community!</h1>\n\n        <TextFieldGroup\n          error={errors.username}\n          label=\"Username\"\n          onChange={this.onChange}\n          checkUserExists={this.checkUserExists}\n          value={this.state.username}\n          field=\"username\"\n        />\n\n        <TextFieldGroup\n          error={errors.email}\n          label=\"Email\"\n          onChange={this.onChange}\n          checkUserExists={this.checkUserExists}\n          value={this.state.email}\n          field=\"email\"\n        />\n\n        <TextFieldGroup\n          error={errors.password}\n          label=\"Password\"\n          onChange={this.onChange}\n          value={this.state.password}\n          field=\"password\"\n          type=\"password\"\n        />\n\n        <TextFieldGroup\n          error={errors.passwordConfirmation}\n          label=\"Password Confirmation\"\n          onChange={this.onChange}\n          value={this.state.passwordConfirmation}\n          field=\"passwordConfirmation\"\n          type=\"password\"\n        />\n\n        <div className={classnames(\"form-group\", { 'has-error': errors.timezone })}>\n          <label className=\"control-label\">Timezone</label>\n          <select\n            className=\"form-control\"\n            name=\"timezone\"\n            onChange={this.onChange}\n            value={this.state.timezone}\n          >\n            <option value=\"\" disabled>Choose Your Timezone</option>\n            {options}\n          </select>\n          {errors.timezone && <span className=\"help-block\">{errors.timezone}</span>}\n        </div>\n\n        <div className=\"form-group\">\n          <button disabled={this.state.isLoading || this.state.invalid} className=\"btn btn-primary btn-lg\">\n            Sign up\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nSignupForm.propTypes = {\n  userSignupRequest: React.PropTypes.func.isRequired,\n  addFlashMessage: React.PropTypes.func.isRequired,\n  isUserExists: React.PropTypes.func.isRequired\n}\n\nSignupForm.contextTypes = {\n  router: React.PropTypes.object.isRequired\n}\n\nexport default SignupForm;\n","import React from 'react';\nimport SignupForm from './SignupForm';\nimport { connect } from 'react-redux';\nimport { userSignupRequest, isUserExists } from '../../actions/signupActions';\nimport { addFlashMessage } from '../../actions/flashMessages.js';\n\nclass SignupPage extends React.Component {\n  render() {\n    const { userSignupRequest, addFlashMessage, isUserExists } = this.props;\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-4 col-md-offset-4\">\n          <SignupForm\n            isUserExists={isUserExists}\n            userSignupRequest={userSignupRequest}\n            addFlashMessage={addFlashMessage} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSignupPage.propTypes = {\n  userSignupRequest: React.PropTypes.func.isRequired,\n  addFlashMessage: React.PropTypes.func.isRequired,\n  isUserExists: React.PropTypes.func.isRequired\n}\n\n\nexport default connect(null, { userSignupRequest, addFlashMessage, isUserExists })(SignupPage);\n","import axios from 'axios';\n\nexport function userSignupRequest(userData) {\n  return dispatch => {\n    return axios.post('/api/users', userData);\n  }\n}\n\nexport function isUserExists(identifier) {\n  return dispatch => {\n    return axios.get(`/api/users/${identifier}`);\n  }\n}\n","import React from 'react';\nimport TextFieldGroup from '../common/TextFieldGroup';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/authActions';\nimport Validator from 'validator';\nimport isEmpty from 'lodash/isEmpty';\n\nfunction validateInput(data) {\n  let errors = {};\n\n  if (Validator.isNull(data.identifier)) {\n    errors.identifier = 'This field is required';\n  }\n  if (Validator.isNull(data.password)) {\n    errors.password = 'This field is required';\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  };\n}\n\n\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      identifier: '',\n      password: '',\n      errors: {},\n      isLoading: false\n    };\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n  }\n\n  isValid() {\n    const { errors, isValid } = validateInput(this.state);\n\n    if (!isValid) {\n      this.setState({ errors });\n    }\n\n    return isValid;\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    if (this.isValid()) {\n      this.setState({ errors: {}, isLoading: true });\n      this.props.login(this.state).then(\n        (res) => this.context.router.push('/'),\n        (err) => this.setState({ errors: err.response.data.errors, isLoading: false })\n      );\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors, identifier, password, isLoading } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <h1>Login</h1>\n\n        { errors.form && <div className=\"alert alert-danger\">{errors.form}</div> }\n\n        <TextFieldGroup\n          field=\"identifier\"\n          label=\"Username / Email\"\n          value={identifier}\n          error={errors.identifier}\n          onChange={this.onChange}\n        />\n\n        <TextFieldGroup\n          field=\"password\"\n          label=\"Password\"\n          value={password}\n          error={errors.password}\n          onChange={this.onChange}\n          type=\"password\"\n        />\n\n        <div className=\"form-group\"><button className=\"btn btn-primary btn-lg\" disabled={isLoading}>Login</button></div>\n      </form>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  login: React.PropTypes.func.isRequired\n}\n\n\nLoginForm.contextTypes = {\n  router: React.PropTypes.object.isRequired\n}\n\nexport default connect(null, { login })(LoginForm);\n","import React from 'react';\nimport LoginForm from './LoginForm';\n\nclass LoginPage extends React.Component {\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-4 col-md-offset-4\">\n          <LoginForm />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createEvent } from '../../actions/eventActions';\nimport TextFieldGroup from '../common/TextFieldGroup';\n\nclass EventForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      errors: {},\n      isLoading: false\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.props.createEvent(this.state);\n  }\n\n  render() {\n    const { title, errors, isLoading } = this.state;\n\n    return (\n      <form onSubmit={this.onSubmit}>\n        <h1>Create New Game Event</h1>\n\n        <TextFieldGroup\n          field=\"title\"\n          label=\"Event Title\"\n          name=\"title\"\n          value={title}\n          onChange={this.onChange}\n          error={errors.title}\n        />\n\n        <button type=\"submit\" disabled={isLoading} className=\"btn btn-primary\">Create</button>\n      </form>\n    );\n  }\n}\n\nEventForm.propTypes = {\n  createEvent: React.PropTypes.func.isRequired\n}\n\nexport default connect(null, { createEvent })(EventForm);\n","import axios from 'axios';\n\nexport function createEvent(event) {\n  return dispatch => {\n    return axios.post('/api/events', event);\n  };\n}\n","import React from 'react';\nimport EventForm from './EventForm';\n\nclass NewEventPage extends React.Component {\n  render() {\n    return (\n      <div>\n        <EventForm />\n      </div>\n    );\n  }\n}\n\nexport default NewEventPage;\n","import React from 'react';\nimport { Route, IndexRoute } from 'react-router';\n\nimport App from './components/App';\nimport Greetings from './components/Greetings';\nimport SignupPage from './components/signup/SignupPage';\nimport LoginPage from './components/login/LoginPage';\nimport NewEventPage from './components/events/NewEventPage';\n\nimport requireAuth from './utils/requireAuth';\n\nexport default (\n  <React.Fragment>\n    <Route>\n     <Route path=\"/\" component={App} />\n      <IndexRoute component={Greetings} />\n      <Route path=\"signup\" component={SignupPage} />\n      <Route path=\"login\" component={LoginPage} />\n    <Route path=\"new-event\" component={requireAuth(NewEventPage)} />\n   </Route>\n  </React.Fragment>\n)\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addFlashMessage } from '../actions/flashMessages';\n\nexport default function(ComposedComponent) {\n  class Authenticate extends React.Component {\n    componentWillMount() {\n      if (!this.props.isAuthenticated) {\n        this.props.addFlashMessage({\n          type: 'error',\n          text: 'You need to login to access this page'\n        });\n        this.context.router.push('/login');\n      }\n    }\n\n    componentWillUpdate(nextProps) {\n      if (!nextProps.isAuthenticated) {\n        this.context.router.push('/');\n      }\n    }\n\n    render() {\n      return (\n        <ComposedComponent {...this.props} />\n      );\n    }\n  }\n\n  Authenticate.propTypes = {\n    isAuthenticated: React.PropTypes.bool.isRequired,\n    addFlashMessage: React.PropTypes.func.isRequired\n  }\n\n  Authenticate.contextTypes = {\n    router: React.PropTypes.object.isRequired\n  }\n\n  function mapStateToProps(state) {\n    return {\n      isAuthenticated: state.auth.isAuthenticated\n    };\n  }\n\n  return connect(mapStateToProps, { addFlashMessage })(Authenticate);\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Router, browserHistory } from 'react-router';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './rootReducer';\nimport setAuthorizationToken from './utils/setAuthorizationToken';\nimport jwtDecode from 'jwt-decode';\nimport { setCurrentUser } from './actions/authActions';\n\nimport routes from './routes';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n  )\n);\n\nif (localStorage.jwtToken) {\n  setAuthorizationToken(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(jwtDecode(localStorage.jwtToken)));\n}\n\nrender(\n  <Provider store={store}>\n    <Router history={browserHistory} routes={routes} />\n  </Provider>, document.getElementById('app'));\n"],"sourceRoot":""}